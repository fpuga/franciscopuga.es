<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Francisco Puga</title><description>Página personal de Francisco Puga</description><link>https://franciscopuga.es/</link><atom:link href="https://franciscopuga.es/rss.xml" rel="self" type="application/rss+xml" /><managingEditor>Francisco Puga</managingEditor><language>es</language> <pubDate>Mon, 30 Jun 2025 20:01:56 -0000</pubDate> <lastBuildDate>Mon, 30 Jun 2025 20:01:56 -0000</lastBuildDate> <ttl>2880</ttl> <generator>MkDocs RSS plugin - v1.15.0</generator> <item> <title>Estructura de directorios de una librería Python</title> <description>&lt;h1 id=&#34;estructura-de-directorios-de-una-libreria-python&#34;&gt;Estructura de directorios de una librería Python&lt;/h1&gt;&lt;p&gt;En Python hay fundamentalmente dos recomendaciones distintas de cómo estructurar los directorios (&lt;em&gt;project layout&lt;/em&gt;) de una librería o herramienta, que queramos distribuir.&lt;/p&gt;&lt;p&gt;No incluyo en este artículo estructuras para &lt;em&gt;proyectos&lt;/em&gt;. Por ejemplo una aplicación web monorepo con el &lt;em&gt;backend&lt;/em&gt; y el &lt;em&gt;front&lt;/em&gt; en el mismo repositorio. Proyectos que quieren desarrollar distintas herramientas bajo el mismo namespace. U otros casos particulares.&lt;/p&gt;&lt;h2 id=&#34;sin-directorio-raiz&#34;&gt;Sin directorio raíz&lt;/h2&gt;&lt;p&gt;Es la estructura más sencilla, especialmente para proyectos pequeños o scripts individuales.&lt;/p&gt;&lt;p&gt;En algunos artículos llaman a esta estructura &lt;em&gt;flat layout&lt;/em&gt;. Esto induce a error, porqué &lt;em&gt;flat layout&lt;/em&gt; es el nombre más usado para la siguiente estructura que veremos. El artículo es antiguo pero en realpython llaman a esto &lt;a href=&#34;https://realpython.com/python-application-layouts/#one-off-script&#34;&gt;one-off-script&lt;/a&gt;&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;my_project/&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;├── __init__.py&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;├── my_project.py&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;├── requirements.txt&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;├── tests/&lt;/span&gt;&lt;span id=&#34;__span-0-6&#34;&gt;&lt;a id=&#34;__codelineno-0-6&#34; name=&#34;__codelineno-0-6&#34; href=&#34;#__codelineno-0-6&#34;&gt;&lt;/a&gt;│ └── test_my_project.py&lt;/span&gt;&lt;span id=&#34;__span-0-7&#34;&gt;&lt;a id=&#34;__codelineno-0-7&#34; name=&#34;__codelineno-0-7&#34; href=&#34;#__codelineno-0-7&#34;&gt;&lt;/a&gt;└── README.md&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tiene a favor que es simple, no requiere subdirectorios, ni siquiera el fichero &lt;code&gt;__init__.py&lt;/code&gt;, y todo está a la vista.&lt;/p&gt;&lt;p&gt;Pero nunca deberíamos usarlo. El &lt;em&gt;boilerplate&lt;/em&gt; de generar una estructura mejor tiene un coste cero si usamos un cookiecutter, y con esta estructura enseguida aparecen problemas de cómo organizar el código, empaquetar el proyecto y a la mínima tendremos problemas con los &lt;code&gt;import&lt;/code&gt;.&lt;/p&gt;&lt;h2 id=&#34;modulo-en-la-raiz-flat-layout&#34;&gt;Módulo en la raíz (flat layout)&lt;/h2&gt;&lt;p&gt;También llamado &lt;em&gt;adhoc layout&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Es probablemente la más usada. El paquete (directorio) principal del proyecto &lt;a href=&#34;https://setuptools.pypa.io/en/latest/userguide/package_discovery.html#flat-layout&#34;&gt;está directamente en la raíz&lt;/a&gt;.&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;my-project/&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;├── my_project/&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;│ ├── __init__.py&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;│ ├── main.py&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;│ └── utils.py&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;├── tests/&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;│ ├── test_main.py&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;│ └── test_utils.py&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt;├───.github&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt;│ └───workflows&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt;├───docs&lt;/span&gt;&lt;span id=&#34;__span-1-12&#34;&gt;&lt;a id=&#34;__codelineno-1-12&#34; name=&#34;__codelineno-1-12&#34; href=&#34;#__codelineno-1-12&#34;&gt;&lt;/a&gt;│ └───mkdocs.yml&lt;/span&gt;&lt;span id=&#34;__span-1-13&#34;&gt;&lt;a id=&#34;__codelineno-1-13&#34; name=&#34;__codelineno-1-13&#34; href=&#34;#__codelineno-1-13&#34;&gt;&lt;/a&gt;├── pyproject.toml&lt;/span&gt;&lt;span id=&#34;__span-1-14&#34;&gt;&lt;a id=&#34;__codelineno-1-14&#34; name=&#34;__codelineno-1-14&#34; href=&#34;#__codelineno-1-14&#34;&gt;&lt;/a&gt;└── README.md&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Más directa que &lt;code&gt;src layout&lt;/code&gt; al eliminar un nivel de anidación.&lt;/li&gt;&lt;li&gt;No es necesario instalar (&lt;code&gt;pip install&lt;/code&gt;) para ejecutar el código.&lt;/li&gt;&lt;li&gt;Muchos proyectos siguen este patrón.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Contras:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Riesgo de &lt;em&gt;import&lt;/em&gt; locales:&lt;/strong&gt; Existe mayor riesgo de que Python importe el módulo en desarrollo (en el &lt;em&gt;source tree&lt;/em&gt; digamos) en lugar del módulo instalado. Esto puede llevar a errores difíciles de detectar a la hora de ejecutar los tests, empaquetar e instalar el proyecto.&lt;/li&gt;&lt;li&gt;No es tan explícito como &lt;code&gt;src layout&lt;/code&gt; sobre lo que se empaqueta y lo que no.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;subdirectorio-src-src-layout&#34;&gt;Subdirectorio &lt;code&gt;src/&lt;/code&gt; (src layout)&lt;/h2&gt;&lt;p&gt;Es una de &lt;a href=&#34;https://setuptools.pypa.io/en/latest/userguide/package_discovery.html#src-layout&#34;&gt;las más recomendadas&lt;/a&gt;.&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;my-project/&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;├── src/&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;│ └── my_project/&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;│ ├── __init__.py&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;│ ├── main.py&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;│ └── utils.py&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;├── tests/&lt;/span&gt;&lt;span id=&#34;__span-2-8&#34;&gt;&lt;a id=&#34;__codelineno-2-8&#34; name=&#34;__codelineno-2-8&#34; href=&#34;#__codelineno-2-8&#34;&gt;&lt;/a&gt;│ ├── test_main.py&lt;/span&gt;&lt;span id=&#34;__span-2-9&#34;&gt;&lt;a id=&#34;__codelineno-2-9&#34; name=&#34;__codelineno-2-9&#34; href=&#34;#__codelineno-2-9&#34;&gt;&lt;/a&gt;│ └── test_utils.py&lt;/span&gt;&lt;span id=&#34;__span-2-10&#34;&gt;&lt;a id=&#34;__codelineno-2-10&#34; name=&#34;__codelineno-2-10&#34; href=&#34;#__codelineno-2-10&#34;&gt;&lt;/a&gt;├───.github&lt;/span&gt;&lt;span id=&#34;__span-2-11&#34;&gt;&lt;a id=&#34;__codelineno-2-11&#34; name=&#34;__codelineno-2-11&#34; href=&#34;#__codelineno-2-11&#34;&gt;&lt;/a&gt;│ └───workflows&lt;/span&gt;&lt;span id=&#34;__span-2-12&#34;&gt;&lt;a id=&#34;__codelineno-2-12&#34; name=&#34;__codelineno-2-12&#34; href=&#34;#__codelineno-2-12&#34;&gt;&lt;/a&gt;├───docs&lt;/span&gt;&lt;span id=&#34;__span-2-13&#34;&gt;&lt;a id=&#34;__codelineno-2-13&#34; name=&#34;__codelineno-2-13&#34; href=&#34;#__codelineno-2-13&#34;&gt;&lt;/a&gt;│ └───mkdocs.yml&lt;/span&gt;&lt;span id=&#34;__span-2-14&#34;&gt;&lt;a id=&#34;__codelineno-2-14&#34; name=&#34;__codelineno-2-14&#34; href=&#34;#__codelineno-2-14&#34;&gt;&lt;/a&gt;├── pyproject.toml&lt;/span&gt;&lt;span id=&#34;__span-2-15&#34;&gt;&lt;a id=&#34;__codelineno-2-15&#34; name=&#34;__codelineno-2-15&#34; href=&#34;#__codelineno-2-15&#34;&gt;&lt;/a&gt;└── README.md&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Al colocar el código en &lt;code&gt;src/my_project/&lt;/code&gt;, el intérprete de Python siempre importará la versión instalada del paquete, no la versión en desarrollo en el directorio raíz. Esto ayuda a asegurar que el comportamiento en desarrollo sea el mismo que en producción.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Claridad de empaquetado:&lt;/strong&gt; Deja claro qué partes del proyecto son el código fuente que se va a empaquetar y distribuir. Otros archivos (tests, documentación, configuración de desarrollo) se mantienen fuera del paquete.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fomenta buenas prácticas:&lt;/strong&gt; Al requerir una &#34;instalación&#34; (aunque sea editable) para que el código funcione correctamente en desarrollo.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Mejor aislamiento de pruebas:&lt;/strong&gt; Los tests se colocan fuera del directorio &lt;code&gt;src/&lt;/code&gt;, lo que significa que no se incluyen en el paquete distribuido y evita dependencias de prueba en el código de producción.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://docs.astral.sh/uv/concepts/projects/init/#libraries&#34;&gt;Es el que prefiere uv&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Contras:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Requiere más boilerplate. Para ejecutar el código se requiere una instalación editable o ajustar el &lt;code&gt;PYTHONPATH&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;La carpeta &lt;code&gt;src/&lt;/code&gt; adicional puede ser redundante.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;variantes-y-comentarios&#34;&gt;Variantes y Comentarios&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://simpleisbetterthancomplex.com/tutorial/2021/06/27/how-to-start-a-production-ready-django-project.html&#34;&gt;Alguna gente prefiere introducir un nivel extra&lt;/a&gt; de indirección donde por ejemplo incluir &lt;em&gt;venv&lt;/em&gt;&lt;/li&gt;&lt;li&gt;Cuando escojamos un nombre para el proyecto, si vamos a publicarlo deberíamos comprobar que el nombre no está cogido en PyPy.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://cjolowicz.github.io/posts/hypermodern-python-01-setup/#creating-a-package-in-src-layout&#34;&gt;Separadores de nombre&lt;/a&gt;. Los módulos y paquetes de Python no admiten &lt;em&gt;hyphens&lt;/em&gt;, &lt;code&gt;-&lt;/code&gt;, sólo &lt;em&gt;underscore&lt;/em&gt;, &lt;code&gt;_&lt;/code&gt;. Es habitual usar &lt;code&gt;kebab-case&lt;/code&gt; (&lt;em&gt;hyphenated&lt;/em&gt;) para el nombre del repositorio (carpeta raíz) y &lt;code&gt;snake_case&lt;/code&gt; (&lt;em&gt;underscored&lt;/em&gt;) para los paquetes y módulos.&lt;/li&gt;&lt;li&gt;Alguna gente considera que lo correcto es empaquetar los tests dentro del &lt;em&gt;distributable package&lt;/em&gt;. Yo no.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;mi-preferida&#34;&gt;Mi preferida&lt;/h2&gt;&lt;p&gt;Mi preferida es &lt;em&gt;scr layout&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Las funcionalidades de los editores (&lt;em&gt;compact folders&lt;/em&gt;, &lt;em&gt;quick open&lt;/em&gt;) y herramientas cómo &lt;code&gt;uv&lt;/code&gt; o &lt;code&gt;cookiecutter&lt;/code&gt; reducen las incomodidades que introduce esta estructura.&lt;/p&gt;&lt;p&gt;Visual y organizativamente me gusta cómo queda la raíz del proyecto.&lt;/p&gt;&lt;p&gt;Me molesta mucho perder tiempo en los &#34;esto no puede estar pasando&#34;, y esta estructura minimiza esos &lt;em&gt;subtle bugs&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Creo que el simple hecho de preocuparse de entenderla ayuda a que la gente no se líe a tocar &lt;code&gt;sys.path&lt;/code&gt;, o probar con &lt;code&gt;python -m&lt;/code&gt; a ver si sus &lt;code&gt;import&lt;/code&gt; funcionan de esa forma. Aunque de &#34;los scripts dentro de proyectos&#34; hablaremos en otro artículo.&lt;/p&gt;&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://hynek.me/articles/testing-packaging/&#34;&gt;Testing &amp;amp; Packaging&lt;/a&gt;. &lt;strong&gt;Muy buena&lt;/strong&gt; explicación del problema del import local frente al import del código instalado al testear y distribuir.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/astral-sh/uv/issues/8178&#34;&gt;Ticket de uv en el que se discute la estructura por defecto de los proyectos&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://packaging.python.org/en/latest/discussions/src-layout-vs-flat-layout/&#34;&gt;src layout vs flat layout&lt;/a&gt; en Python Packaging User Guide&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://blog.ionelmc.ro/2014/05/25/python-packaging/&#34;&gt;Packaging a python library&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://franciscopuga.es/blog/2025/06/30/python-project-layout/</link> <pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2025/06/30/python-project-layout/</guid> </item> <item> <title>Escoger un Python Language Server</title> <description>&lt;h1 id=&#34;escoger-un-python-language-server&#34;&gt;Escoger un Python Language Server&lt;/h1&gt;&lt;p&gt;En un &lt;a href=&#34;https://franciscopuga.es/blog/2025/05/17/language-server-protocol/&#34;&gt;artículo anterior&lt;/a&gt; definimos que era Language Server Protocol y cómo funcionaban los Language Server.&lt;/p&gt;&lt;p&gt;En este nos centramos en escoger un Language Server para Python.&lt;/p&gt;&lt;h2 id=&#34;criterios&#34;&gt;Criterios&lt;/h2&gt;&lt;p&gt;Para escoger algo, hay que definir que criterios priorizamos. En el caso de un LS o herramientas relacionadas los criterios podrían ser:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Rendimiento. Queremos que la respuesta a la mayoría de acciones sea casi inmediata.&lt;/li&gt;&lt;li&gt;Software libre. Preferimos que la implementación sea software libre.&lt;/li&gt;&lt;li&gt;Capacidades. Cuantas más capacidades (que refactorings, ...) nos ofrezca el LS o una determinada combinación de LS mejor.&lt;/li&gt;&lt;li&gt;Fragmentación. Si un LS o herramienta integrada nos da todo lo que necesitamos, mejor que si tenemos que preocuparnos por ver los changelog de 5 herramientas distintas.&lt;/li&gt;&lt;li&gt;Mantenido. Con tracción en la comunidad, ...&lt;/li&gt;&lt;li&gt;Multiples entornos. Al menos el lint y el format debe ser consistente entre múltiples entornos: editor (uses NeoVim, PyCharm o vscode), pre-commit y ci. Cómo gestione un refactoring o la navegación no es necesario que sea consistente.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;opciones&#34;&gt;Opciones&lt;/h2&gt;&lt;h3 id=&#34;pylance-pyright&#34;&gt;Pylance / Pyright&lt;/h3&gt;&lt;p class=&#34;annotate&#34;&gt;Pylance es el LS privativo de Microsoft para Python, basado en la librería / LS (1) libre de tipado estático &lt;a href=&#34;https://github.com/microsoft/pyright&#34;&gt;Pyright&lt;/a&gt;.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;img alt=&#34;🙋‍♂️&#34; class=&#34;twemoji&#34; src=&#34;https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/1f64b-200d-2642-fe0f.svg&#34; title=&#34;:man_raising_hand:&#34; /&gt; La distinción entre librería, LS, ... no siempre es clara&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Microsoft mantenía un LS libre &lt;a href=&#34;https://github.com/microsoft/python-language-server&#34;&gt;python-language-server&lt;/a&gt;, pero lo discontinuaron en favor de Pylance. Pylance sólo se puede usar con los productos de Microsoft (vscode) y no con editores derivados como Cursor o VSCodium, ni alternativos &lt;a href=&#34;https://github.com/lithammer/nvim-pylance&#34;&gt;como NeoVim&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Pyright es una buena librería para tipado estático y si bien se puede usar como LS en cualquier editor, no es una buena alternativa porqué carece de funcionalidades básicas como añadir &lt;code&gt;imports&lt;/code&gt; de forma automática.&lt;/p&gt;&lt;p&gt;Este dúo tiene más cosas &#34;molestas&#34;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Están escritos en typescript. No es algo malo de por si, pero no deja de ser extraño&lt;/li&gt;&lt;li&gt;Las capacidades de refactoring son malas. Rename, Extract Variable, Move Symbol, y a veces se consigue usar el Extract Method.&lt;/li&gt;&lt;li&gt;Privativo y no usable en otros editores&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;basedpyright&#34;&gt;basedpyright&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/DetachHead/basedpyright&#34;&gt;basedpyright&lt;/a&gt; es un fork libre de Pyright que incorpora funcionalidades de Pylance.&lt;/p&gt;&lt;p&gt;Más o menos los mismos comentarios que para Pylance/Pyright&lt;/p&gt;&lt;p&gt;Personalmente he tenido malas experiencias al usarlo en Cursor. Probablemente se deba a una mala configuración, pero tengo la sensación de que se queda trabado a menudo.&lt;/p&gt;&lt;h3 id=&#34;jedi-rope&#34;&gt;Jedi / Rope&lt;/h3&gt;&lt;p&gt;Ni &lt;a href=&#34;https://github.com/davidhalter/jedi&#34;&gt;Jedi&lt;/a&gt;, ni &lt;a href=&#34;https://github.com/python-rope/rope&#34;&gt;Rope&lt;/a&gt; son LS. Ambas son dos librerías históricas del ecosistema Python. Rope se centra en refactoring y Jedi en análisis estático, autocompletado y navegación.&lt;/p&gt;&lt;p&gt;Ninguna de las dos proporciona formatting, linting o tipado lo que debería alcanzarse mediante otras librerías cómo mypy (tipado) y ruff (formatting y linting).&lt;/p&gt;&lt;p&gt;Si bien no son un LS, si que son la base para varios Language Server.&lt;/p&gt;&lt;h3 id=&#34;python-lsp-server&#34;&gt;python-lsp-server&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/python-lsp/python-lsp-server&#34;&gt;python-lsp-server&lt;/a&gt; se puede decir que es el LS que proviene de la comunidad. Es mantenido por el equipo de &lt;a href=&#34;https://www.spyder-ide.org/&#34;&gt;Spyder IDE&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tras instalarlo proporciona el LS bajo el comando &lt;code&gt;pylsp&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Está basado en jedi que proporciona: Completions, Definitions, Hover, References, Signature Help, and Symbols. Si están instaladas en el entorno se integra de forma nativa con otras librerías cómo rope (capacidades básicas) y flake8. Y el propio LS admite plugins para integrarse con más librerías: mypy, ruff, más refactorings de rope, ...&lt;/p&gt;&lt;p&gt;Tiene dos problemas grandes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;La &lt;a href=&#34;https://github.com/python-lsp/python-lsp-server/blob/develop/CONFIGURATION.md&#34;&gt;configuración&lt;/a&gt; es un caos, porqué interactúa todo con todo&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/python-lsp/python-lsp-server/issues/614&#34;&gt;No tiene plugin para vscode&lt;/a&gt; / cursor / vscodium. Y no tiene pinta de haberlo en el &lt;a href=&#34;https://github.com/python-lsp/python-lsp-server/issues/39&#34;&gt;futuro&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Al menos en proyectos pequeños, parece ser que con proyectos grandes puede ser lento, no es una mala opción (si hubiera plugin), y es la única alternativa ahora mismo que proporciona un refactoring decente. La mejor forma de probarlo es con &lt;a href=&#34;https://zed.dev/docs/languages/python&#34;&gt;Zed&lt;/a&gt;.&lt;/p&gt;&lt;details class=&#34;note&#34;&gt;&lt;summary&gt;Notas sobre la configuración no muy ordenadas&lt;/summary&gt;&lt;p&gt;¿&lt;a href=&#34;https://github.com/python-lsp/python-lsp-ruff/issues/89&#34;&gt;Tiene sentido instalar pylsp-ruff o mejor directamente ruff&lt;/a&gt;?. En principio ruff mejor individual&lt;/p&gt;&lt;div class=&#34;language-bash highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-0-1&#34;&gt;&lt;a id=&#34;__codelineno-0-1&#34; name=&#34;__codelineno-0-1&#34; href=&#34;#__codelineno-0-1&#34;&gt;&lt;/a&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python-lsp-server&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pylsp-rope&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pylsp-mypy&lt;/span&gt;&lt;span id=&#34;__span-0-2&#34;&gt;&lt;a id=&#34;__codelineno-0-2&#34; name=&#34;__codelineno-0-2&#34; href=&#34;#__codelineno-0-2&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-3&#34;&gt;&lt;a id=&#34;__codelineno-0-3&#34; name=&#34;__codelineno-0-3&#34; href=&#34;#__codelineno-0-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# ¿Mejor con wesockets?&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-4&#34;&gt;&lt;a id=&#34;__codelineno-0-4&#34; name=&#34;__codelineno-0-4&#34; href=&#34;#__codelineno-0-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# pip install &amp;#39;python-lsp-server[websockets]&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-0-5&#34;&gt;&lt;a id=&#34;__codelineno-0-5&#34; name=&#34;__codelineno-0-5&#34; href=&#34;#__codelineno-0-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# pylsp --ws --port [port]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configuración para usar el plugin externo de rope&lt;/p&gt;&lt;div class=&#34;language-text highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-1-1&#34;&gt;&lt;a id=&#34;__codelineno-1-1&#34; name=&#34;__codelineno-1-1&#34; href=&#34;#__codelineno-1-1&#34;&gt;&lt;/a&gt;pylsp.plugins.pycodestyle.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-2&#34;&gt;&lt;a id=&#34;__codelineno-1-2&#34; name=&#34;__codelineno-1-2&#34; href=&#34;#__codelineno-1-2&#34;&gt;&lt;/a&gt;pylsp.plugins.flake8.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-3&#34;&gt;&lt;a id=&#34;__codelineno-1-3&#34; name=&#34;__codelineno-1-3&#34; href=&#34;#__codelineno-1-3&#34;&gt;&lt;/a&gt;pylsp.plugins.autopep8.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-4&#34;&gt;&lt;a id=&#34;__codelineno-1-4&#34; name=&#34;__codelineno-1-4&#34; href=&#34;#__codelineno-1-4&#34;&gt;&lt;/a&gt;pylsp.plugins.mccabe.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-5&#34;&gt;&lt;a id=&#34;__codelineno-1-5&#34; name=&#34;__codelineno-1-5&#34; href=&#34;#__codelineno-1-5&#34;&gt;&lt;/a&gt;pylsp.plugins.pycodestyle.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-6&#34;&gt;&lt;a id=&#34;__codelineno-1-6&#34; name=&#34;__codelineno-1-6&#34; href=&#34;#__codelineno-1-6&#34;&gt;&lt;/a&gt;pylsp.plugins.pyflakes.enabled =false&lt;/span&gt;&lt;span id=&#34;__span-1-7&#34;&gt;&lt;a id=&#34;__codelineno-1-7&#34; name=&#34;__codelineno-1-7&#34; href=&#34;#__codelineno-1-7&#34;&gt;&lt;/a&gt;pylsp.plugins.pylint.enabled =false&lt;/span&gt;&lt;span id=&#34;__span-1-8&#34;&gt;&lt;a id=&#34;__codelineno-1-8&#34; name=&#34;__codelineno-1-8&#34; href=&#34;#__codelineno-1-8&#34;&gt;&lt;/a&gt;pylsp.plugins.yapf.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-9&#34;&gt;&lt;a id=&#34;__codelineno-1-9&#34; name=&#34;__codelineno-1-9&#34; href=&#34;#__codelineno-1-9&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-10&#34;&gt;&lt;a id=&#34;__codelineno-1-10&#34; name=&#34;__codelineno-1-10&#34; href=&#34;#__codelineno-1-10&#34;&gt;&lt;/a&gt;# set pylsp.plugins.rope_autoimport.enabled to true&lt;/span&gt;&lt;span id=&#34;__span-1-11&#34;&gt;&lt;a id=&#34;__codelineno-1-11&#34; name=&#34;__codelineno-1-11&#34; href=&#34;#__codelineno-1-11&#34;&gt;&lt;/a&gt;# This enables both completions and code actions. You can switch them off by setting pylsp.plugins.rope_autoimport.completions.enabled and/or pylsp.plugins.rope_autoimport.code_actions.enabled to false&lt;/span&gt;&lt;span id=&#34;__span-1-12&#34;&gt;&lt;a id=&#34;__codelineno-1-12&#34; name=&#34;__codelineno-1-12&#34; href=&#34;#__codelineno-1-12&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-13&#34;&gt;&lt;a id=&#34;__codelineno-1-13&#34; name=&#34;__codelineno-1-13&#34; href=&#34;#__codelineno-1-13&#34;&gt;&lt;/a&gt;pylsp.plugins.rope_autoimport.enabled = ???&lt;/span&gt;&lt;span id=&#34;__span-1-14&#34;&gt;&lt;a id=&#34;__codelineno-1-14&#34; name=&#34;__codelineno-1-14&#34; href=&#34;#__codelineno-1-14&#34;&gt;&lt;/a&gt;pylsp.plugins.rope_completion.enabled = ???&lt;/span&gt;&lt;span id=&#34;__span-1-15&#34;&gt;&lt;a id=&#34;__codelineno-1-15&#34; name=&#34;__codelineno-1-15&#34; href=&#34;#__codelineno-1-15&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span id=&#34;__span-1-16&#34;&gt;&lt;a id=&#34;__codelineno-1-16&#34; name=&#34;__codelineno-1-16&#34; href=&#34;#__codelineno-1-16&#34;&gt;&lt;/a&gt;pylsp.plugins.rope_rename.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-17&#34;&gt;&lt;a id=&#34;__codelineno-1-17&#34; name=&#34;__codelineno-1-17&#34; href=&#34;#__codelineno-1-17&#34;&gt;&lt;/a&gt;pylsp.plugins.jedi_rename.enabled = false&lt;/span&gt;&lt;span id=&#34;__span-1-18&#34;&gt;&lt;a id=&#34;__codelineno-1-18&#34; name=&#34;__codelineno-1-18&#34; href=&#34;#__codelineno-1-18&#34;&gt;&lt;/a&gt;pylsp.plugins.pylsp_rope.rename = true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configuración de rope en pyproject.toml&lt;/p&gt;&lt;div class=&#34;language-toml highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span id=&#34;__span-2-1&#34;&gt;&lt;a id=&#34;__codelineno-2-1&#34; name=&#34;__codelineno-2-1&#34; href=&#34;#__codelineno-2-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;# https://rope.readthedocs.io/en/latest/configuration.html&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-2&#34;&gt;&lt;a id=&#34;__codelineno-2-2&#34; name=&#34;__codelineno-2-2&#34; href=&#34;#__codelineno-2-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;[tool.rope]&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-3&#34;&gt;&lt;a id=&#34;__codelineno-2-3&#34; name=&#34;__codelineno-2-3&#34; href=&#34;#__codelineno-2-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;split_imports&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-4&#34;&gt;&lt;a id=&#34;__codelineno-2-4&#34; name=&#34;__codelineno-2-4&#34; href=&#34;#__codelineno-2-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;autoimport&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aliases&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-5&#34;&gt;&lt;a id=&#34;__codelineno-2-5&#34; name=&#34;__codelineno-2-5&#34; href=&#34;#__codelineno-2-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;dt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-6&#34;&gt;&lt;a id=&#34;__codelineno-2-6&#34; name=&#34;__codelineno-2-6&#34; href=&#34;#__codelineno-2-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;multiprocessing&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;/span&gt;&lt;span id=&#34;__span-2-7&#34;&gt;&lt;a id=&#34;__codelineno-2-7&#34; name=&#34;__codelineno-2-7&#34; href=&#34;#__codelineno-2-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;&lt;h3 id=&#34;pyrefly&#34;&gt;Pyrefly&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://pyrefly.org/&#34;&gt;Pyrefly&lt;/a&gt; es el último en llegar al mercado. CLI, type checker y LS mantenido por Meta.&lt;/p&gt;&lt;p&gt;Es rápido, tiene plugins para Code y derivados y funciona bien.&lt;/p&gt;&lt;p&gt;Lo malo es que no tiene ningún refactoring en este momento.&lt;/p&gt;&lt;h3 id=&#34;ruff&#34;&gt;Ruff&lt;/h3&gt;&lt;p&gt;Ruff tiene desde hace tiempo un LS integrado para el formatting y linting.&lt;/p&gt;&lt;p&gt;En este momento están en proceso de integrar dentro de la propia herramienta el type checker y convertirlo en un posible substituto completo para los otros LS.&lt;/p&gt;&lt;h3 id=&#34;pycharm&#34;&gt;PyCharm&lt;/h3&gt;&lt;p&gt;No cumple nuestros requisitos iniciales, pero a día de hoy es el IDE con mejor soporte para Python.&lt;/p&gt;&lt;p&gt;Merece la pena probarlo.&lt;/p&gt;&lt;h3 id=&#34;otras-alternativas&#34;&gt;Otras alternativas&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/pappasam/jedi-language-server&#34;&gt;jedi-language-server&lt;/a&gt; es una propuesta minimalista que sólo implementa expone las capacidades que tenga jedi&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/muffinmad/anakin-language-server&#34;&gt;anakin-language-server&lt;/a&gt; es poco popular. Se basa en jedi y permite integración con mypy, yapf, pyflakes y pycodestyle&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.pydev.org/vscode/index.html&#34;&gt;PyDev on Visual Studio Code&lt;/a&gt;. PyDev es un plugin para trabajar con Python en Eclipse. Al parecer también funciona cómo una extensión para VSCode, pero necesita tener Java instalado.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/palantir/python-language-server&#34;&gt;palantir/python-language-server&lt;/a&gt; Si mantenimiento pylsp es un fork de este.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/mtshiba/pylyzer&#34;&gt;pylyzer&lt;/a&gt; un LS y type checker escrito en rust. Poco mantenimiento.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;otros-ls-especificos&#34;&gt;Otros LS específicos&lt;/h3&gt;&lt;p&gt;Cómo se ve en el caso de ruff, un LS no tiene porqué proporcionar las funcionalidades completas de un lenguaje. Hay LS que cubren aspectos o librerías muy específicas:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://github.com/joshuadavidthomas/django-language-server&lt;/li&gt;&lt;li&gt;https://www.fourdigits.nl/blog/django-template-lsp/&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;conclusiones&#34;&gt;Conclusiones&lt;/h2&gt;&lt;p&gt;PyCharm aparte, y con ánimo de polemizar se puede decir que no hay un soporte tan bueno cómo podría esperarse para Python en los IDEs.&lt;/p&gt;&lt;p&gt;Personalmente en este momento estoy usando Pyrefly con el plugin para Cursor como LS principale, y ruff con su plugin cómo el LS secundario que se encarga del formatting y linting.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2025/06/19/language-server-python/</link> <pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2025/06/19/language-server-python/</guid> </item> <item> <title>Las pensiones cómo inversión</title> <description>&lt;h1 id=&#34;las-pensiones-como-inversion&#34;&gt;Las pensiones cómo inversión&lt;/h1&gt;&lt;p&gt;Las pensiones suelen ser consideradas cómo un gasto del ~15% del PIB. Pero &lt;strong&gt;qué pasa si en lugar de gasto lo llamamos inversión&lt;/strong&gt; y tratamos de evaluar los ingresos que produce esa inversión.&lt;/p&gt;&lt;p&gt;Dos investigadores concluyen que gracias a los impuestos IVA, IRPF de trabajadores, ... vinculados al gasto producido con el dinero de las pensiones sale una relación 1 a 1,1. Es decir, cada 1€ gastado en pensiones genera 1,1€. Me faltan conocimientos para interpretar el estudio, y lógicamente no se puede llevar al extremo, el estado no tiene infinito dinero para gastar aunque la devolución sea mayor que el gasto. Pero en esta época de campaña anti pensiones, me gusta que haya otra forma de entender las cosas (recordemos el peligro de una sola historia).&lt;/p&gt;&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://www.eldiario.es/economia/si-mira-manera-gasto-pensiones-estudio-senala-motor-crecimiento-economico_1_12171547.html&#34;&gt;Artículo al respecto de elDiario.es&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1080/09538259.2024.2351833&#34;&gt;El estudio de los economistas Eladio Febrero y Fernando Bermejo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://franciscopuga.es/blog/2025/05/17/pensiones-como-inversion/</link> <pubDate>Sat, 17 May 2025 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2025/05/17/pensiones-como-inversion/</guid> </item> <item> <title>Language Server Protocol</title> <description>&lt;h1 id=&#34;language-server-protocol&#34;&gt;Language Server Protocol&lt;/h1&gt;&lt;p&gt;Language Server Protocol (LSP) define un conjunto de mensajes JSON-RPC y estructuras de datos que permiten que el servidor (Language Server) exponga que capacidades (&lt;em&gt;language services&lt;/em&gt;) ofrece y un cliente (generalmente un IDE) las consuma.&lt;/p&gt;&lt;p&gt;Estas capacidades son las habituales para una herramienta de programación: autocomplete, refactoring, navegación (go to definition, ...), type checking, ...&lt;/p&gt;&lt;p&gt;&lt;em&gt;Este no es un artículo en profundidad sobre herramientas de desarrollo, me he tomado algunas licencias poéticas porqué sólo quiero situar el contexto para artículos posteriores&lt;/em&gt;.&lt;/p&gt;&lt;h2 id=&#34;antes-de-lsp&#34;&gt;Antes de LSP&lt;/h2&gt;&lt;p&gt;Se puede argumentar que, antes, la diferencia principal entre un IDE y un editor, era que el IDE incluía de serie y dentro de su propio código funcionalidades que interpretaban el texto cómo &#34;código fuente&#34; y no cómo otro texto cualquiera. Así proporcionaban capacidades de formateado del código, análisis estático (lint), autocomplete, moverse entre la definición y el uso de un símbolo, ...&lt;/p&gt;&lt;p&gt;Los editores en cambio no tenían estas capacidades de forma nativa. Pensemos en PyCharm o PyDev (alguien se acuerda de la versión de Eclipse para Python), frente a Vim, Emacs o incluso Atom.&lt;/p&gt;&lt;p&gt;Lo que había era librerías (o aplicaciones) que daban estas capacidades en el &#34;terminal&#34;. En el mundo Python teníamos (tenemos) cosas cómo jedi (para autocomplete y navegación), rope (para refactorings y autocomplete), flake8 (para linting), yapf (para formateado), ...&lt;/p&gt;&lt;p&gt;La solución natural era que los editores tuvieran plugins que usando la API nativa de cada editor se comunicaran de alguna forma no estándar con la herramienta de turno. Así aparecieron millones de plugins. Podíamos tener cosas cómo (&lt;em&gt;nombres inventados&lt;/em&gt;) atom-yapf (que sólo daba formato con yaps), atom-python-linter (que te dejaba escoger entre flake8 o pylint o los dos a la vez), atom-formatter (que vale para distintos lenguajes), ...&lt;/p&gt;&lt;p&gt;Mantener ese ecosistema tanto a nivel desarrollo cómo a nivel uso, que funciona con que, que instala el plugin y que tengo que instalar yo, ... era un caos. Y cada implementación era específica para un servidor y una librería.&lt;/p&gt;&lt;h2 id=&#34;porque-un-linter-es-mejor-que-un-ide&#34;&gt;Porqué un linter es mejor que un IDE&lt;/h2&gt;&lt;p&gt;Hay acciones cómo el autocomplete, navegación o refactoring que sólo tiene sentido en el entorno de desarrollo. Cada persona del equipo decide que herramientas se le adaptan mejor.&lt;/p&gt;&lt;p&gt;Pero también hay acciones, lint y format sobre todo, que son decisiones de equipo y hay valor en que estén disponibles en cualquier entorno: editor, pre-commit, ci, ...&lt;/p&gt;&lt;p&gt;Por ello resulta útil que ciertas herramientas sean independientes del IDE y se puedan usar vía plugin o LSP.&lt;/p&gt;&lt;h2 id=&#34;nace-lsp&#34;&gt;Nace LSP&lt;/h2&gt;&lt;p&gt;En 2016 de la mano de VSCode, Microsoft publica LSP que se acaba convirtiendo en un estándar abierto &lt;em&gt;de facto&lt;/em&gt; de la industria.&lt;/p&gt;&lt;p&gt;La principal ventaja es desacoplar las herramientas de los editores:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Consistencia en diferentes entornos: Las mismas reglas pueden aplicarse en distintos editores, pre-commit, ...&lt;/li&gt;&lt;li&gt;Evita duplicación de esfuerzos&lt;ul&gt;&lt;li&gt;Los desarrolladores de lenguajes solo necesitan crear un servidor de lenguaje y funcionará con cualquier editor&lt;/li&gt;&lt;li&gt;Los editores sólo necesitan implementar soporte para LSP y no para cada herramienta por separado&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No sólo lenguajes de programación. Un LSP puede servir para DSL y otros, por ejemplo la configuración de Ansible.&lt;/li&gt;&lt;li&gt;Arquitectura cliente servidor. El servidor ni siquiera tiene que correr en el mismo entorno que el cliente&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;descripcion-de-alto-nivel&#34;&gt;Descripción de alto nivel&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/blogs/2016/06/27/common-language-protocol&#34;&gt;Este artículo de VSCode&lt;/a&gt; nos da una buena idea del funcionamiento a alto nivel:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Here’s an example of how a tool and a language server could communicate semantic information during a routine editing session:&lt;/p&gt;&lt;p&gt;The user opens a file (referred to as a &lt;em&gt;document&lt;/em&gt;) in the tool: The tool notifies the language server that a document is open (&lt;code&gt;didOpen&lt;/code&gt;) and that the information about that document is maintained by the tool in memory.&lt;/p&gt;&lt;p&gt;The user makes edits: The tool notifies the server about the document change (&lt;code&gt;didChange&lt;/code&gt;) and the semantic information of the program is updated by the language server. As this happens, the language server analyses this information and notifies the tool with the errors and warnings (&lt;code&gt;diagnostics&lt;/code&gt;) that are found.&lt;/p&gt;&lt;p&gt;The user executes &#39;Go To Definition&#39; on a symbol: The tool sends a &lt;code&gt;definition&lt;/code&gt; request to the server. The server responds with a &lt;code&gt;uri&lt;/code&gt; of the document that holds the definition and the &lt;code&gt;range&lt;/code&gt; inside the document. Based on this information, the tool can open the corresponding document at the defining position.&lt;/p&gt;&lt;p&gt;The user closes the document (file): A &lt;code&gt;didClose&lt;/code&gt; notification is sent from the tool, informing the language server that the document is now no longer in memory and instead maintained by (i.e. stored on) the file system.&lt;/p&gt;&lt;p&gt;This communication, which takes place over JSON-RPC, happens many times over the course of a typical session.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&#34;capacidades-del-lsp-y-el-editor&#34;&gt;Capacidades del LSP y el Editor&lt;/h2&gt;&lt;p&gt;En &lt;a href=&#34;https://medium.com/@malintha1996/understanding-the-language-server-protocol-5c0ba3ac83d2&#34;&gt;este artículo&lt;/a&gt; se describe bastante bien el proceso de inicialización e intercambio de capacidades.&lt;/p&gt;&lt;p&gt;Ni el editor, ni el LS tienen porqué implementar todas las posibles capacidades definidas en el estándar. Cuando arranca el servidor se lleva a cabo un intercambio de mensajes en el que cada parte dice lo que quiere y lo que puede hacer.&lt;/p&gt;&lt;p&gt;Imaginemos por ejemplo un LS puede tener la capacidad de hacer un refactoring de &lt;em&gt;Extract function&lt;/em&gt; pero en la GUI no hay ese menú.&lt;/p&gt;&lt;p&gt;Tenemos un ejemplo claro en el mundo Python, ruff incorpora su propio LS, pero (a día de hoy) sólo provee capacidades de format y lint, y no por ejemplo de refactoring. El editor (y la desarrolladora que tiene que configurar el editor) es responsable de no liarse y coordinar que el refactoring debe hacerse a través de un LS (PyLance, python-lsp-server, ...) y el formateado a través de ruff.&lt;/p&gt;&lt;h2 id=&#34;fragmentacion&#34;&gt;Fragmentación&lt;/h2&gt;&lt;p&gt;Los LSP suenan &lt;a href=&#34;https://xkcd.com/927/&#34;&gt;al conocido comic de XKCD sobre los standards&lt;/a&gt;. Es una nueva tecnología y port tanto fragmenta más al mercado porqué nadie está obligado a usarla.&lt;/p&gt;&lt;p&gt;Sigue habiendo editores con plugins independientes, en Python hay un montón de LS: ruff, PyLance, BasedPyRight, jedi-language-server, python-lsp-server, &lt;a href=&#34;https://www.pydev.org/vscode/index.html&#34;&gt;PyDev&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Además en muchos casos los LS no implementan las capacidades por si mismos. Algunas las implementan y otras las delegan a otras herramientas de forma &#34;nativa&#34; o mediante plugins.&lt;/p&gt;&lt;p&gt;Por ejemplo PyLance es un LS privativo de Microsoft para Python que sólo funciona en VSCode (y no en otras versiones como Cursor o VSCodium). Muchas funcionalidades (syntax errors, ...) provienen de PyRight que es una librería libre también de Microsoft pero hay funcionalidades como los imports automáticos que están sólo en PyLance, y otras funcionalidades cómo formateado PyLance las ofrece a través de integración con yapf, ruff, ...&lt;/p&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusión&lt;/h2&gt;&lt;p&gt;Entender cómo funcionan las herramientas que usamos para desarrollar no está de más, y los LS se han convertido en una de las más útiles.&lt;/p&gt;&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Language_Server_Protocol&#34;&gt;Language Server Protocol en Wikipedia&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Página oficial de LSP&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://franciscopuga.es/blog/2025/05/17/language-server-protocol/</link> <pubDate>Sat, 17 May 2025 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2025/05/17/language-server-protocol/</guid> </item> <item> <title>Vídeo: Deep Dive into LLMs like ChatGPT. By Andrej Karpathy</title> <description>&lt;h1 id=&#34;video-deep-dive-into-llms-like-chatgpt-by-andrej-karpathy&#34;&gt;Vídeo: Deep Dive into LLMs like ChatGPT. By Andrej Karpathy&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://karpathy.ai/&#34;&gt;Andrej Karpathy&lt;/a&gt; fue uno de los fundadores de OpenAI y Director de IA en Tesla.&lt;/p&gt;&lt;p&gt;En este vídeo de tres horas y media desgrana todo el funcionamiento de un LLM, desde que descargas los datos de internet hasta que puedes conversar con ella. Si hace unas semanas enlazaba la interesante, pero complicada explicación de &lt;a href=&#34;https://franciscopuga.es/blog/2025/01/19/como-funciona-un-llm-y-porque-mienten/&#34;&gt;Stephen Wolfram&lt;/a&gt; este es un vídeo para todos los públicos.&lt;/p&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube-nocookie.com/embed/7xTGNNLPyMI?si=AO97C63oAmv0CpVQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;Uno de los pocos momentos en que sale sale de la parte &#34;técnica&#34; es sobre la 1h:10min. Explica que tras el pre-training (entrenar al modelo con todo internet), se pasa al post-training. En el post-training &#34;especialistas humanos&#34; redactan conversaciones en base a unas ideas generales de &#34;personalidad&#34; que la empresa que construye el modelo quiere que tenga. Más o menos dice los siguiente:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;lo que pasa cuando abres chatgpt y haces una pregunta, no es que una especie de IA mágica te responda, es un proceso estadístico en la que las respuestas se parecen a lo que unos editores humanos siguiendo las instrucciones de una empresa han decidido que es correcto.&lt;/p&gt;&lt;p&gt;Si preguntas &#34;Cuales son los 5 lugares que no me puedo perder de París&#34;, la respuesta no se basa en una comparativa &#34;científica&#34; de que lugar es mejor y porqué, se parece más bien a la respuesta que estatisticamente habría respondido el editor.&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://franciscopuga.es/blog/2025/02/15/video-deep-dive-into-llm-andrej-karpathy/</link> <pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2025/02/15/video-deep-dive-into-llm-andrej-karpathy/</guid> </item> <item> <title>Cómo funciona un LLM y porqué mienten</title> <description>&lt;h1 id=&#34;como-funciona-un-llm-y-porque-mienten&#34;&gt;Cómo funciona un LLM y porqué mienten&lt;/h1&gt;&lt;p&gt;Uno de los artículos más inteligentes que he leído sobre LLM.&lt;/p&gt;&lt;p&gt;El autor, Simon Willinson es sensato (desde mi punto de vista), trabaja mucho con LLM y es el creador de Django (uno de los frameworks web más usados).&lt;/p&gt;&lt;p&gt;Básicamente dice que ChatGPT es una herramienta increíble, cuando sabes usarla, pero que usarla bien no es tan fácil &lt;a href=&#34;https://simonwillison.net/2023/Apr/7/chatgpt-lies/&#34;&gt;porqué &#34;ChatGPT miente&#34;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Y para entender porqué &#34;miente&#34; o como funciona los LLM a alto nivel pero muy técnico, &lt;a href=&#34;https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-does-it-work/&#34;&gt;este otro artículo&lt;/a&gt; de un verdadero pionero de estos temas es imprescindible.&lt;/p&gt;&lt;p&gt;Wolfram es en resumen el creador de Mathematica, que en cierto momento estuvo a la altura de Matlab pero luego se fue por otros derroteros. Su buscador Wolfram Alfa que yo sepa fue el primero que intentaba no darte una colección de links si no responder a preguntas formuladas en lenguaje natural, y ya tiene bastantes añitos (2009 según la Wikipedia)&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2025/01/19/como-funciona-un-llm-y-porque-mienten/</link> <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2025/01/19/como-funciona-un-llm-y-porque-mienten/</guid> </item> <item> <title>Vimium: Un plugin para navegar la web con el teclado</title> <description>&lt;h1 id=&#34;vimium-un-plugin-para-navegar-la-web-con-el-teclado&#34;&gt;Vimium: Un plugin para navegar la web con el teclado&lt;/h1&gt;&lt;p&gt;Por productividad y salud estoy intentando usar menos el ratón. Una de las situaciones donde más lo usaba era al navegar por páginas web y tras una &lt;a href=&#34;https://pakstech.com/blog/browse-web-with-keyboard/&#34;&gt;pequeña búsqueda&lt;/a&gt; me he decidido por &lt;a href=&#34;https://vimium.github.io/&#34;&gt;Vimium&lt;/a&gt;. Un plugin para Firefox, Chrome, y familia que permite usar las teclas de Vim para navegar.&lt;/p&gt;&lt;p&gt;Lo más molón, es la tecla &lt;code&gt;f&lt;/code&gt; o &lt;code&gt;F&lt;/code&gt; (de follow). Activa lo que llaman hint mode. Detecta todos los enlaces de la página y los marca con unas letras amarillas al lado. Al pulsar la secuencia de letras sigue el enlace. En la misma pestaña si se ha usado f, en otra pestaña si se ha pulsado F, o se teclea la secuencia en mayúsculas. Se puede usar Escape para desactivar los hints. Nuestras teclas preferidas de largo. Según como esté construida la página esta opción funciona también para aceptar avisos de cookies, …&lt;/p&gt;&lt;p&gt;Y en &lt;a href=&#34;https://icarto.es/&#34;&gt;iCarto&lt;/a&gt; no soy yo sólo quien &lt;a href=&#34;https://gitlab.com/icarto/ikdb/-/blob/master/configurar_equipo/browser/browser_navegar_teclado_vimium.md&#34;&gt;se ha hecho adicto&lt;/a&gt;.&lt;/p&gt;&lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; height=&#34;349&#34; loading=&#34;lazy&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/t67Sn0RGK54?feature=oembed&#34; title=&#34;Vimium - The Hacker&#39;s Browser&#34; width=&#34;620&#34;&gt;&lt;/iframe&gt;</description><link>https://franciscopuga.es/blog/2021/07/17/vimium-un-plugin-para-navegar-la-web-con-el-teclado/</link> <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2021/07/17/vimium-un-plugin-para-navegar-la-web-con-el-teclado/</guid> </item> <item> <title>Experimentos de «Monetization» en este blog</title> <description>&lt;h1 id=&#34;experimentos-de-monetization-en-este-blog&#34;&gt;Experimentos de «Monetization» en este blog&lt;/h1&gt;&lt;p&gt;Hace unos días Tom MacWright publicaba en su blog un artículo titulado &lt;a href=&#34;https://macwright.com/2020/11/15/mini-monetization-experiments.html&#34;&gt;Monetization experiments on this website&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Como él, un poco por tratar de pagar el hosting, y sobre todo por &lt;em&gt;jugar&lt;/em&gt; un poco hice varios experimentos en este blog. Nunca fue algo que me tomara demasiado en serio. De hecho para escribir este artículo he intentado revisar algunos datos para descubrir que las estadísticas de Google Analytics dejaron de funcionar en mi blog, seguramente en alguna actualización y no tengo acceso a datos antiguos. Y me pasa lo mismo con las estadísticas de WordPress.com / Jetpack.&lt;/p&gt;&lt;p&gt;Cuando escribía en el blog algo más a menudo, sobre todo artículos más utilitaristas del tipo &lt;a href=&#34;http://conocimientoabierto.es/cifrar-particion-disco-duro-externo-linux/197/&#34;&gt;Como cifrar una partición de un disco duro externo&lt;/a&gt; tenía bastantes visitas para ser un blog personal, aunque ahora no me atrevo a dar una cifra. Con este desastre, no puedo dar datos muy concretos, pero para hacernos una idea, en base a mi memoria y los números que me encuentro en Google AdSense, en los últimos tres años constan 15.304 páginas vistas y 1.86€. En él último mes 376 páginas vistas y 0.01€&lt;/p&gt;&lt;p&gt;Los experimentos:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Desde que me dí de alta en AdSense (creo recordar que en 2011) he generado un saldo de 33.37€. Google sólo hace efectivos los pagos cuando se llega a 70€. Así que a este ritmo me quedan otros 9 años hasta poder cobrar algo. Al cancelar la cuenta hacen efectivo el pago si pasa de 10€&lt;/li&gt;&lt;li&gt;Algunos de los &lt;a href=&#34;http://conocimientoabierto.es/libro-javascript-the-good-parts-de-douglas-crockford/858/&#34;&gt;libros que comento en el blog&lt;/a&gt; tenían enlaces a Amazon a través del programa de Affiliates. De modo que si alguien lo comproba siguiendo el enlace me quedaba un porcentaje de la venta. Amazon nunca me notifico una compra a través de estos enlaces.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://conocimientoabierto.es/libro-matar-a-un-ruisenor/723/&#34;&gt;Otros libros o enlaces&lt;/a&gt; a descargas compartidas los ponía a través de adf.ly. Un anonimizador de enlaces que te obliga a pasar por una página previa de publicidad. He comprobado que mi cuenta está actualmente cancelada y en su momento tampoco recuerdo que llegará a obtener más de unos céntimos.&lt;/li&gt;&lt;li&gt;A través del botón de donaciones de paypal recibí un pago de 1.5€&lt;/li&gt;&lt;li&gt;En dos ocasiones me llegaron correos ofreciéndome escribir posts patrocionados. Uno de un casino online, el otro no recuerdo de que. Ofrecían unos 50€ pero no comprobé si era verdad porqué rechazé ambas&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Así que arranco el nuevo año con un poco de limpieza:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Cerrando cuentas en servicios que aparecen en mi keepass en los que no he entrado desde hace tiempo.&lt;/li&gt;&lt;li&gt;Elimino la primera versión de este blog que todavía existía en blogspot.&lt;/li&gt;&lt;li&gt;Elimino del blog Google Analytics y Google AdSense&lt;/li&gt;&lt;li&gt;Borrados los enlaces a Amazon. En algún momento seguramente incluya enlaces a &lt;a href=&#34;https://macwright.com/2020/12/24/the-new-reading-stack.html&#34;&gt;alguno de los sitios recomendados en este post&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Los enlaces a adf.ly los he eliminado o substituido por los enlaces finales directamente&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Amazon Afiliados y Google AdSense seguramente son una de las formas más sencillas en las que un blog personal al que dediques algo de mimo puede generar ingresos, pero por los cantidades que aportan, a mi al menos, no me compensan para ayudar a perpetuar los problemas que estas empresas causan.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2021/01/01/experimentos-de-monetization-en-este-blog/</link> <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2021/01/01/experimentos-de-monetization-en-este-blog/</guid> </item> <item> <title>Presentaciones de fotos en formato vídeo (slideshows) desde la línea de comandos</title> <description>&lt;h1 id=&#34;presentaciones-de-fotos-en-formato-video-slideshows-desde-la-linea-de-comandos&#34;&gt;Presentaciones de fotos en formato vídeo (slideshows) desde la línea de comandos&lt;/h1&gt;&lt;p&gt;Hace ya algunos años apareció en este blog como &lt;a href=&#34;http://conocimientoabierto.es/hacer-presentaciones-de-fotos-en-formato-video/35/&#34;&gt;hacer presentaciones de fotos en formato vídeo&lt;/a&gt;. A pesar de que hay muchos programas buenos para editar vídeo en GNU/Linux, esta vez quería tener un proceso sencillo y fácilmente replicable aún a costa de perder un poco de calidad o efectos (como degradado entre imágenes, …).&lt;/p&gt;&lt;p&gt;En este tutorial veremos, sin entrar en muchos detalles (mis conocimientos no dan para ello), una forma muy rápida de crear un slideshow con música usando únicamente el terminal. Como limitante partimos de la base de que todas las imágenes están en el mismo formato (en este caso JPEG)&lt;/p&gt;&lt;h2 id=&#34;las-herramientas&#34;&gt;Las herramientas&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;sudo apt-get install --install-recommends rename imagemagick ffmpeg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://www.howtogeek.com/423214/how-to-use-the-rename-command-on-linux/&#34;&gt;rename&lt;/a&gt; permite renombrar archivos usando expresiones regulares&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://imagemagick.org&#34;&gt;imagemagick&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;normalizar-los-nombres-y-ordenar-las-imagenes&#34;&gt;Normalizar los nombres y ordenar las imágenes&lt;/h2&gt;&lt;p&gt;El primer paso es ordenar las imágenes poniéndolos un «nombre normalizado» que represente ese orden. En este caso partimos de unas imágenes que ya tienen cierto orden, pero arreglamos las mayúsculas, usamos dos caracteres para los números y ajustamos las del medio.&lt;/p&gt;&lt;p&gt;Cada caso será muy particular pero veamos un ejemplo:&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ cp -r original copia&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ cd copia&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ ls&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;0.JPG 1_1.JPG 12_1.JPG 13.jpg 15.jpg 17.JPG 19.jpg 20.jpg 22.jpg 24.jpg 26.jpg 28.jpg 2.JPG 31.jpg 4.JPG 6.JPG 8.JPG&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;10.JPG 11.JPG 12.JPG 14.jpg 16.jpg 18.jpg 1.JPG 21.JPG 23.jpg 25.JPG 27.jpg 29.jpg 30.jpg 3.JPG 5.jpg 7.JPG 9.JPG&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ rename &#39;s/.JPG/.jpg/&#39; *.JPG&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ rename &#39;s/3(\d).jpg/5$1.jpg/&#39; 3*.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ rename &#39;s/2(\d).jpg/4$1.jpg/&#39; 2*.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ rename &#39;s/1([2-9]).jpg/3$1.jpg/&#39; 1*.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ ls&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;0.jpg 1_1.jpg 12_1.jpg 2.jpg 33.jpg 35.jpg 37.jpg 39.jpg 40.jpg 42.jpg 44.jpg 46.jpg 48.jpg 4.jpg 51.jpg 6.jpg 8.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;10.jpg 11.jpg 1.jpg 32.jpg 34.jpg 36.jpg 38.jpg 3.jpg 41.jpg 43.jpg 45.jpg 47.jpg 49.jpg 50.jpg 5.jpg 7.jpg 9.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ mv 12_1.jpg 31.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ rename &#39;s/1([0-1]).jpg/2$1.jpg/&#39; 1*.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ rename &#39;s/([1-9]).jpg/1$1.jpg/&#39; ?.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ mv 0.jpg 00.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ mv 1_1.jpg 01.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;$ ls&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;00.jpg 11.jpg 13.jpg 15.jpg 17.jpg 19.jpg 21.jpg 32.jpg 34.jpg 36.jpg 38.jpg 40.jpg 42.jpg 44.jpg 46.jpg 48.jpg 50.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;01.jpg 12.jpg 14.jpg 16.jpg 18.jpg 20.jpg 31.jpg 33.jpg 35.jpg 37.jpg 39.jpg 41.jpg 43.jpg 45.jpg 47.jpg 49.jpg 51.jpg&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;h2 id=&#34;rotar-las-imagenes&#34;&gt;Rotar las imágenes&lt;/h2&gt;&lt;p&gt;A pesar de que en la previsualización del explorador de archivos podamos ver todas las imágenes rectas, alguna de ellas puede estar girada. Esto es por qué muchas herramientas usan por defecto &lt;a href=&#34;https://jdhao.github.io/2019/07/31/image_rotation_exif_info/&#34;&gt;los metadatos EXIF de la imagen para rotarlas&lt;/a&gt; de la forma lógica.&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;# las que no tengan un&lt;/code&gt;1&lt;code&gt;están rotadas&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;identify -verbose * | grep -E &#39;(Image:|Orientation)&#39;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;# Rotarlas. https://stackoverflow.com/a/19475281/930271&lt;br /&gt;# Esto modifica todas las fotos, por lo que mejor usarlo sólo con la que deben&lt;br /&gt;# ser rotadas&lt;br /&gt;mogrify -auto-orient *.jpg&lt;/p&gt;&lt;p&gt;identify -verbose * | grep -E &#39;(Image:(.*)|exif:Orientation: [2-9])&#39;&lt;br /&gt;mogrify -auto-orient 16.jpg&lt;br /&gt;mogrify -auto-orient 45.jpg&lt;/p&gt;&lt;h2 id=&#34;identificar-tamanos-y-aspect-ratio&#34;&gt;Identificar tamaños y «aspect ratio»&lt;/h2&gt;&lt;p&gt;Para montar las imágenes en el vídeo debemos investigar sus tamaños y sobre todo la relación de aspecto. El comando &lt;a href=&#34;https://imagemagick.org/script/identify.php&#34;&gt;identify&lt;/a&gt; de ImageMagick nos puede dar la información más relevante y podemos ordenarla por &lt;em&gt;aspect ratio&lt;/em&gt;, anchura, …&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;# https://unix.stackexchange.com/questions/50252&lt;/code&gt;&lt;/p&gt;&lt;p&gt;# ordenadas por aspect ratio&lt;br /&gt;$ identify -format &#34;%[fx:w/h] %w %h %M\n&#34; *.jpg | sort -n -k1&lt;/p&gt;&lt;p&gt;1.5 4608 3072 20.jpg&lt;br /&gt;0.75 1944 2592 15.jpg&lt;br /&gt;0.75 2304 3072 16.jpg&lt;br /&gt;0.75 3864 5152 45.jpg&lt;br /&gt;1.33333 1280 960 44.jpg&lt;br /&gt;1.33333 1280 960 46.jpg&lt;br /&gt;1.33333 1280 960 47.jpg&lt;br /&gt;1.33333 2592 1944 13.jpg&lt;br /&gt;1.33333 3072 2304 17.jpg&lt;br /&gt;1.33333 3264 2448 01.jpg&lt;br /&gt;1.33333 3264 2448 14.jpg&lt;br /&gt;1.33333 3264 2448 19.jpg&lt;br /&gt;1.33333 3264 2448 33.jpg&lt;br /&gt;1.33333 4000 3000 43.jpg&lt;br /&gt;1.33333 4000 3000 50.jpg&lt;br /&gt;1.33333 4000 3000 51.jpg&lt;br /&gt;1.33333 4320 3240 18.jpg&lt;br /&gt;1.33333 4608 3456 31.jpg&lt;br /&gt;1.33333 4672 3504 34.jpg&lt;br /&gt;1.33333 4672 3504 35.jpg&lt;br /&gt;1.33333 5120 3840 49.jpg&lt;br /&gt;1.33333 5152 3864 32.jpg&lt;br /&gt;1.33333 5152 3864 37.jpg&lt;br /&gt;1.33472 1280 959 38.jpg&lt;br /&gt;1.33884 2592 1936 00.jpg&lt;br /&gt;1.33884 2592 1936 11.jpg&lt;br /&gt;1.49841 3776 2520 21.jpg&lt;br /&gt;1.77778 3072 1728 12.jpg&lt;br /&gt;1.77778 3264 1836 39.jpg&lt;br /&gt;1.77778 3968 2232 41.jpg&lt;br /&gt;1.77778 5312 2988 36.jpg&lt;br /&gt;1.77778 5312 2988 40.jpg&lt;br /&gt;1.77778 5312 2988 42.jpg&lt;br /&gt;1.77778 5312 2988 48.jpg&lt;/p&gt;&lt;p&gt;# ordenadas por width&lt;br /&gt;identify -format &#34;%[fx:w/h] %w %h %M\n&#34; *.jpg | sort -n -k2&lt;/p&gt;&lt;p&gt;Aquí la clave es:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ajustar las imágenes para que tengan todas la misma relación de aspecto y que no salgan deformadas. Cosa que haremos directamente con ffmpeg al crear el vídeo.&lt;/li&gt;&lt;li&gt;Escoger el tamaño de referencia a usar para las imágenes. La «redimensión» la haremos directamente al crear el vídeo.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Sin entender mucho de vídeos mi criterio es coger el aspect ratio más común a las imágenes, en este caso &lt;strong&gt;1.333&lt;/strong&gt;, y un tamaño intermedio, de modo que haya pocas imágenes por debajo de ese tamaño, y que al ampliar no pixelen demasiado, en este caso me quedo con &lt;strong&gt;2592×1936&lt;/strong&gt;&lt;/p&gt;&lt;h2 id=&#34;montar-el-video&#34;&gt;Montar el vídeo&lt;/h2&gt;&lt;p&gt;La wiki de ffmpeg da el comando básico para &lt;a href=&#34;https://trac.ffmpeg.org/wiki/Slideshow&#34;&gt;hacer el slideshow&lt;/a&gt;, y en stackoverflow &lt;a href=&#34;https://stackoverflow.com/questions/24961127/how-to-create-a-video-from-images-with-ffmpeg&#34;&gt;también&lt;/a&gt; hay buenas &lt;a href=&#34;https://stackoverflow.com/questions/44634765/ffmpeg-aspect-ratio-of-image-in-a-slideshow&#34;&gt;respuestas&lt;/a&gt;&lt;/p&gt;&lt;p&gt;El comando que usaremos en este caso es:&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;ffmpeg -framerate 1/5 -pattern_type glob -i &#39;*.jpg&#39; -i audio.mp3 -vf &#39;scale=2592:1936:force_original_aspect_ratio=decrease,pad=2592:1936:(ow-iw)/2:(oh-ih)/2,setsar=1&#39; -c:v libx264 -c:a copy -crf 14 -r 25 -pix_fmt yuv420p -shortest output.mp4&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Los parámetros más relevantes para el &lt;em&gt;slideshow&lt;/em&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-framerate 1/5&lt;/code&gt;: El denominador define cuanto se mostrará cada imagen&lt;/li&gt;&lt;li&gt;&lt;code&gt;-pattern_type glob -i &#39;*.jpg&#39;&lt;/code&gt;: Cuando las imágenes no están ordenadas exactamente de forma secuencial con este parámetro las meterá en el video ordenadas por nombre&lt;/li&gt;&lt;li&gt;&lt;code&gt;&#39;scale=2592:1936:force_original_aspect_ratio=decrease,pad=2592:1936:(ow-iw)/2:(oh-ih)/2,setsar=1&#39;&lt;/code&gt;: Escala las imágenes a 2592×1936 y mete bandas negras de relleno cuando no se pueda conservar la relación de aspecto&lt;/li&gt;&lt;/ul&gt;</description><link>https://franciscopuga.es/blog/2020/07/18/presentaciones-de-fotos-en-formato-video-slideshows-desde-la-linea-de-comandos/</link> <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2020/07/18/presentaciones-de-fotos-en-formato-video-slideshows-desde-la-linea-de-comandos/</guid> </item> <item> <title>Circular Dependencies Webcast por Miguel Grinberg</title> <description>&lt;h1 id=&#34;circular-dependencies-webcast-por-miguel-grinberg&#34;&gt;Circular Dependencies Webcast por Miguel Grinberg&lt;/h1&gt;&lt;p&gt;Un &lt;a href=&#34;https://blog.miguelgrinberg.com/post/flask-webcast-3-circular-dependencies&#34;&gt;Webcast de Miguel Grinberg sobre como evitar Dependencias Circulares&lt;/a&gt; en una aplicación Python / Flask.&lt;/p&gt;&lt;iframe allowfullscreen=&#34;allowfullscreen&#34; frameborder=&#34;0&#34; height=&#34;315&#34; loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/NH-8oLHUyDc&#34; width=&#34;560&#34;&gt;&lt;/iframe&gt;&lt;h2 id=&#34;my-metadata&#34;&gt;My Metadata&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Descripción: Un webcast de 1h en el que se refactoriza una aplicación Flask que empieza con un único fichero a varios paquetes y módulos.&lt;/li&gt;&lt;li&gt;Calificación: 3 sobre 5&lt;/li&gt;&lt;li&gt;Día de Visualización: 2020-06-28&lt;/li&gt;&lt;li&gt;Año de publicación: 2018&lt;/li&gt;&lt;li&gt;Duración: 68 minutos&lt;/li&gt;&lt;li&gt;Velocidad de reproducción recomendada: 1.75&lt;/li&gt;&lt;li&gt;Etiquetas: python; flask; dependencies; refactoring&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;lecciones-aprendidas&#34;&gt;Lecciones aprendidas&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Mantener el &lt;em&gt;entry point&lt;/em&gt; tan limpio como sea posible. Incluso con un único import.&lt;/li&gt;&lt;li&gt;El módulo que es ejecutado inicialmente por Python adquiere el nombre de &lt;code&gt;__main__&lt;/code&gt; a nivel interno, por ello los «nombres» que se definan en este módulo, no se identificarán inicialmente a efectos de dependencias como &lt;code&gt;myfile.myvar&lt;/code&gt; si no como &lt;code&gt;__main__.myvar&lt;/code&gt;, lo que es más fácil que genere un error de dependencias circulares&lt;/li&gt;&lt;li&gt;No usar los __init__.py como mecanismo para acortar los imports. Hay tantas opiniones a favor como en contra sobre el tema. A mi me ha generado más problemas que soluciones.&lt;/li&gt;&lt;li&gt;Usar imports desde la «raíz» &lt;code&gt;from myapp.models.user import User&lt;/code&gt; y no estilo &lt;code&gt;from user import User&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;No pasa nada por no poner los &lt;code&gt;import&lt;/code&gt; al inicio del fichero cuando tenga sentido que sea de otra forma, por ejemplo para evitar dependencias circulares. Usar &lt;code&gt;# noqa&lt;/code&gt; para que no pite el linter en estos casos es aceptable.&lt;/li&gt;&lt;/ul&gt;</description><link>https://franciscopuga.es/blog/2020/06/29/circular-dependencies-webcast-por-miguel-grinberg/</link> <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2020/06/29/circular-dependencies-webcast-por-miguel-grinberg/</guid> </item> <item> <title>Comprar un portátil para desarrollo en 2019</title> <description>&lt;h1 id=&#34;comprar-un-portatil-para-desarrollo-en-2019&#34;&gt;Comprar un portátil para desarrollo en 2019&lt;/h1&gt;&lt;p&gt;Toca cambiar de portátil. 8GB de RAM ya se quedan cortos. La patilla de la pantalla está dañada y no parece que vaya a aguantar mucho más. Y la batería con una vm, el ide y el navegador no dura mucho más de 1h.&lt;/p&gt;&lt;p&gt;Para situarnos el anterior comprado hace cuatro años era un &lt;a href=&#34;https://es.msi.com/Laptop/GE60-2PC-Apache/Overview&#34;&gt;MSI GE60 2PC Apache&lt;/a&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Micro &lt;a href=&#34;https://ark.intel.com/content/www/es/es/ark/products/78934/intel-core-i7-4720hq-processor-6m-cache-up-to-3-60-ghz.html&#34;&gt;i7-4720HQ&lt;/a&gt;. 2.60GHz de frecuencia base, hasta 3.60GHz con el Turboboost. 4 cores, 8 threads, 6MB de cache y un TDP de 47W.&lt;/li&gt;&lt;li&gt;8GB RAM SODIMM DDR3 a 1600 fabricada por Kingston. No se cual es la latencia.&lt;/li&gt;&lt;li&gt;Nvidia GeForce GTX 850M con 2MB RAM&lt;/li&gt;&lt;li&gt;Disco duro mecánico de 1TB a 7200rpm&lt;/li&gt;&lt;li&gt;Pantalla de 15.5 y resolución de 1920×1080 normalita&lt;/li&gt;&lt;li&gt;Wireless-AC 3160, b/g/n y bt 4.0&lt;/li&gt;&lt;li&gt;hdmi, vga. 2 puertos USB 2.0 y 2 puertos USB 3.0, además de jacks para salida y entrada de audio.&lt;/li&gt;&lt;li&gt;383 x 249 x 30 y 2.6kg de peso con batería&lt;/li&gt;&lt;li&gt;Batería de 6 celdas, 49Wh&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Cuando lo compré escribí una &lt;a href=&#34;http://conocimientoabierto.es/buscando-portatil-programar/752/&#34;&gt;guía de compra de portátil&lt;/a&gt; que aunque desactualizada me sirve de base para buscar uno nuevo. En base al rendimiento actual los requisitos no han variado demasiado:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Todo lo importante debe funcionar al 100% con linux. Si no va la luz del teclado me da igual. Si deja de funcionar el wifi con cada actualización del kernel adios.&lt;/li&gt;&lt;li&gt;Mínimo 16GB de RAM&lt;/li&gt;&lt;li&gt;Un i7 o equivalente en AMD. Un vistazo rápido me dice que los i5-82xxu que se montan en este rango de precios no son mucho mejores que mi micro actual y no me interesa averiguar si con un i5 me llega.&lt;/li&gt;&lt;li&gt;Resolución pantalla mínima 1920 x 1080. Como la mayoría del tiempo uso una externa como principal no necesito que sea extraordinariamente buena pero no quiero quemarme los ojos así que será un plus interesante&lt;/li&gt;&lt;li&gt;Mínimo 1TB de disco&lt;/li&gt;&lt;li&gt;No tengo necesidad de gráfica dedicada pero prefiero que no me coma RAM extra&lt;/li&gt;&lt;li&gt;No lo quiero más grande ni pesado que el actual. A pesar de que el 85% del tiempo está apoyado en una mesa, el 15% restante de viajes en tren, reuniones y uno o dos viajes de trabajo al año hacen que prefiera uno más pequeño. Pero no voy a sacrificar más de 150€ o rendimiento por ello&lt;/li&gt;&lt;li&gt;Quiero un teclado «bueno» a pesar de que la mayor parte del tiempo use uno externo&lt;/li&gt;&lt;li&gt;No tengo demasiadas necesidades de conectividad y puertos, no necesito Bluetooth y me da igual que tenga salida VGA y lector de DVD. Estos detalles me ayudaran en la decisión final pero asumo que con el resto de características que busco las necesidades mínimas en este aspecto estarán cubiertas. &lt;em&gt;Update: Cuando revisé las opciones disponibles esto varió un poco, más en otro post&lt;/em&gt;&lt;/li&gt;&lt;li&gt;La marca no me preocupa. Hay demasiadas opiniones y experiencias particulares a favor y en contra de todas las marcas. Por experiencias cercanas doy puntos positivos a MSI y Slimbook y negativos a los HP y los Dell pero sólo en la clasificación final cuando haya dudas. No a priori. Y lo mismo con &lt;a href=&#34;http://conocimientoabierto.es/buscando-portatil-impresiones-foros-reviews/760/&#34;&gt;otras consideraciones como el uso de minerales de zonas de conflicto&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Mi orquilla inicial es amplia y la reduciré a medida que investigue un poco. Empezaré por portátiles entre 900 y 1300€ con IVA. Una cantidad por la que se puede comprar algo aceptable para cuatro años si estás dispuesto a sacrificar alguna característica a cambio de precio como: batería, tamaño o potencia.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Hay un par de puntos clave sobre los que tenía dudas al principio:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tamaño de la pantalla. Probablemnte la decisión más eliminadora a la hora de comprar el portátil. El de ahora es de 15.6 y para mi uso es cómodo. Pero siempre dudo con coger uno más pequeño. 14» sería perfecto. A los de 13» les tengo algo de manía. &lt;em&gt;Update: Al poco de empezar a buscar los de 14» quedaron prácticamente descartados porque no me interesaba tanto sacrificar rendimiento o precio a cambio de mejoras de tamaño y batería&lt;/em&gt;&lt;/li&gt;&lt;li&gt;Con el disco duro también tengo dudas. De comprar unicamente un único disco magnético (HDD) tengo claro que sea de 7.200rpm. Una búsqueda rápida me dice que hay algún SSD de 1TB (lo ideal) a partir de 1.100€ pero en general suben bastante el precio. La opción de dos discos SSD + HDD puede ser buena pero me da que consume bastante batería y me puede fastidiar un poco mi organización actual de particiones, donde guardo las cosas cifrado y backups. &lt;em&gt;Update: Cerca de tomar la decisión final quedó claro que en ese rango de precios tengo que sacrificar mi organización actual.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Con esto en la cabeza preparo mi hoja de cálculo y la inicializo con un par de configuraciones de &lt;a href=&#34;https://slimbook.es/&#34;&gt;Slimbook&lt;/a&gt; que me servirán de referencia. Luego voy rellenando algunos datos principales y descartando algunos directamente a partir de la búsqueda en un par de páginas. Fundamentalmente:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://www.pccomponentes.com/&lt;/li&gt;&lt;li&gt;https://slimbook.es/&lt;/li&gt;&lt;li&gt;https://www.vantpc.es/&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.amazon.es/b?_encoding=UTF8&amp;amp;tag=conocimientoa-21&amp;amp;linkCode=ur2&amp;amp;linkId=36da4e949e420deafa18c8184e2926cd&amp;amp;camp=3638&amp;amp;creative=24630&amp;amp;node=683279031&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;y un vistazo rápido a:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;http://tiendas.mediamarkt.es/ordenadores-portatiles&lt;/li&gt;&lt;li&gt;https://www.worten.es/inicio/informatica/ordenadores/portatil.html&lt;/li&gt;&lt;li&gt;http://www.elcorteingles.es&lt;/li&gt;&lt;li&gt;https://www.dell.com/es-es&lt;/li&gt;&lt;li&gt;https://www.pcbox.com/&lt;/li&gt;&lt;li&gt;https://www.lenovo.com/&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Si estás interesado en este tema puedes ver &lt;a href=&#34;http://conocimientoabierto.es/tag/comprar-portatil/&#34;&gt;otros artículos parecidos&lt;/a&gt; o seguir esta serie &lt;a href=&#34;http://conocimientoabierto.es/tag/comprar-portatil-2019/&#34;&gt;en esta etiqueta&lt;/a&gt;.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2019/05/13/comprar-portatil-desarrollo-2019/</link> <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2019/05/13/comprar-portatil-desarrollo-2019/</guid> </item> <item> <title>Virtualbox + Windows + VideoConferencia Múltiple en Skype</title> <description>&lt;h1 id=&#34;virtualbox-windows-videoconferencia-multiple-en-skype&#34;&gt;Virtualbox + Windows + VideoConferencia Múltiple en Skype&lt;/h1&gt;&lt;p&gt;Si usas linux no sería extraño que alguna vez te hayas encontrado con una &lt;strong&gt;ineludible&lt;/strong&gt; videoconferencia de grupo por Skype y hayas tenido que hacer números para poder participar.&lt;/p&gt;&lt;p&gt;Quien dice Skype, dice alguno de esas extrañas aplicaciones privativas de videoconferencia que alguna gente (clientes) insisten en usar.&lt;/p&gt;&lt;p&gt;Si tienes una licencia de Windows que puedas reusar para una máquina virtual, a mi estas instrucciones me funcionan en Ubuntu 18.04 para poder usar webcam y micro.&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;# Substituir por el usuario deseado&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;USER=$(whoami)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;sudo apt install virtualbox virtualbox-ext-pack virtualbox-guest-additions-iso virtualbox-guest-x11 virtualbox-dkms&lt;br /&gt;sudo usermod -a -G vboxusers $USER&lt;br /&gt;sudo usermod -a -G video,audio,pulse-access $USER&lt;br /&gt;sudo usermod -a -G audio pulse&lt;/p&gt;&lt;p&gt;Tras crear la máquina guest con Windows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Encender la máquina virtual&lt;/li&gt;&lt;li&gt;&lt;code&gt;Dispositivos ópticos&lt;/code&gt; -&amp;gt; &lt;code&gt;montar una nueva iso&lt;/code&gt; -&amp;gt; En &lt;code&gt;/usr/share/virtualbox&lt;/code&gt; seleccionr VBoxGuestAdditions.iso.&lt;/li&gt;&lt;li&gt;En caso de que no se ejecute automáticamente el cd/iso, ejecutaremos el .exe desde el explorador de archivos.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Con estas instrucciones tendremos una máquina virtual que soporte webcam, audio, usbs, portapapeles bidireccional (a activar en la configuración de cada máquina), …&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2018/07/24/virtualbox-windows-videoconferencia-multiple-en-skype/</link> <pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2018/07/24/virtualbox-windows-videoconferencia-multiple-en-skype/</guid> </item> <item> <title>Cifrar una disco duro externo en Ubuntu</title> <description>&lt;h1 id=&#34;cifrar-una-disco-duro-externo-en-ubuntu&#34;&gt;Cifrar una disco duro externo en Ubuntu&lt;/h1&gt;&lt;p&gt;La sencillez con que se pueden hacer ciertas tareas en Ubuntu u otras distros GNU/Linux ha mejorado enormemente desde la &lt;a href=&#34;http://conocimientoabierto.es/cifrar-particion-disco-duro-externo-linux/197/&#34;&gt;última vez que escribí sobre esto como cifrar un disco duro&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;A día de hoy en Ubuntu la mejor opción es usar el asistente gráfico. Llega con insertar el USB y desmontarlo. A continuación desplegamos el menú contextual del disco externo pulsando con el botón derecho sobre él en el navegador de archivos y seleccionamos &lt;code&gt;Format&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://conocimientoabierto.es/files/2018/06/cifrar_disco_externo_1-267x300.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;En la ventana de opciones seleccionamos las que aparecen en la siguiente captura.&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://conocimientoabierto.es/files/2018/06/cifrar_disco_externo_2-300x193.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Y listo, ya tenemos un disco duro externo cifrado en formato ext4 ideal para hacer copias de seguridad.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2018/06/10/cifrar-disco-duro-externo-en-ubuntu/</link> <pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2018/06/10/cifrar-disco-duro-externo-en-ubuntu/</guid> </item> <item> <title>Migrar a GitLab manteniendo mirrors en GitHub</title> <description>&lt;h1 id=&#34;migrar-a-gitlab-manteniendo-mirrors-en-github&#34;&gt;Migrar a GitLab manteniendo mirrors en GitHub&lt;/h1&gt;&lt;p&gt;En &lt;a href=&#34;http://icarto.es&#34;&gt;iCarto&lt;/a&gt; habíamos planificado hace un tiempo migrar nuestra infraestructura de desarrollo (repositorios de código principalmente) a GitLab. Estos días hemos terminado la migración y he aprovechado para escribir un artículo de &lt;a href=&#34;http://icarto.es/2018/06/migrar-a-gitlab-manteniendo-mirrors-en-github/&#34;&gt;como se pueden mantener mirrors de los repos de gitlab en github&lt;/a&gt; a través de la propia plataforma o con un servidor intermedio.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2018/06/09/migrar-a-gitlab-manteniendo-mirrors-en-github/</link> <pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2018/06/09/migrar-a-gitlab-manteniendo-mirrors-en-github/</guid> </item> <item> <title>Libro: El corredor del laberinto</title> <description>&lt;h1 id=&#34;libro-el-corredor-del-laberinto&#34;&gt;Libro: El corredor del laberinto&lt;/h1&gt;&lt;p&gt;He aprovechado las vacaciones de navidad a uno de mis «&lt;a href=&#34;https://capacitaccionchile.wordpress.com/category/placer-culpable-o-el-arte-de-dejarse-llevar/&#34;&gt;placeres culpables&lt;/a&gt;» que es la lectura de sagas &lt;a href=&#34;https://www.caninomag.es/guia-para-principiantes-la-literatura-young-adult/&#34;&gt;Young Adult&lt;/a&gt; de ciencia ficción o fantasía. En este caso toco el turno de «&lt;a href=&#34;https://es.wikipedia.org/wiki/The_Maze_Runner&#34;&gt;El corredor del laberinto&lt;/a&gt;» de James Dashner.&lt;/p&gt;&lt;p&gt;Poco que decir de este libro a parte de ser una decepción absoluta. De los que me he tragado hasta ahora Harry Potter, Los Juegos del Hambre, Divergente, … esta serie es la peor y no la recomiendo.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Clasificación&lt;/strong&gt;: 2/5&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Te gustará si&lt;/strong&gt;: Eres un fan incodicional de este tipo de novelas y Divergente te pareció buena.&lt;/p&gt;&lt;p&gt;Puedes comprarlo en tu tienda habitual, aunque hay quien te lo presta gratis en &lt;a href=&#34;https://www.epubgratis.org/el-corredor-del-laberinto-james-dashner/&#34;&gt;epubgratis&lt;/a&gt;.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2017/12/31/libro-el-corredor-del-laberinto/</link> <pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2017/12/31/libro-el-corredor-del-laberinto/</guid> </item> <item> <title>Libro: Dive Into Python</title> <description>&lt;h1 id=&#34;libro-dive-into-python&#34;&gt;Libro: Dive Into Python&lt;/h1&gt;&lt;p&gt;Hay una versión del libro &lt;a href=&#34;http://www.diveintopython.net/&#34;&gt;para python 2&lt;/a&gt;, cuya última edición es de 2004, y una versión centrada en &lt;a href=&#34;http://www.diveintopython3.net/&#34;&gt;python 3&lt;/a&gt; con algo de contenido reescrito. El autor original Mark Pilgrim hace tiempo que &lt;a href=&#34;https://en.wikipedia.org/wiki/Mark_Pilgrim#.22Disappearance.22_from_the_Internet&#34;&gt;desapareció de internet&lt;/a&gt;, pero los libros continúan &lt;a href=&#34;https://github.com/diveintomark/diveintopython3&#34;&gt;siendo mantenidos&lt;/a&gt; aunque poco actualizados en github.&lt;/p&gt;&lt;p&gt;Ambas versiones de los libros tienen buenas puntuaciones en Amazon y Goodreads [&lt;a href=&#34;https://www.goodreads.com/book/show/24038.Dive_Into_Python&#34;&gt;v2&lt;/a&gt;] [&lt;a href=&#34;https://www.goodreads.com/book/show/6919462-dive-into-python-3&#34;&gt;v3&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;Se venden como un hands-on en python, es decir poca teoría y presentar ejemplos prácticos.&lt;/p&gt;&lt;p&gt;La estructura de ambas versiones es la misma para todos los capítulos comienza con un ejemplo de código, y a continuación lo explica paso a paso. Durante el proceso va introduciendo nuevas funcionalidades del lenguaje. Tal y como está estructurado no es adecuado para alguien sin conocimientos de programación previos. Tampoco me parece adecuado para gente que sepa de otro lenguaje y quiera aprender python.&lt;/p&gt;&lt;p&gt;Algunos de los capítulos de la segunda versión se quedan antiguos y/o muy específicos como trabajar con http, xml o html. La parte de testing, tdd y refactoring es bastante limitada y no me acaba de convencer, aunque hay que reconocer que pocos libros no específicos tratan estos temas, por lo que es de agradecer que al menos los mencionen. Los primeros tres capítulos y el de expresiones regulares son casi un relleno, me parecen avanzados para alguien que no sepa python, poco útiles para quien ya controle del lenguaje. Los capítulos de &lt;a href=&#34;http://www.diveintopython.net/power_of_introspection/index.html&#34;&gt;Introspección&lt;/a&gt;, &lt;a href=&#34;http://www.diveintopython.net/object_oriented_framework/index.html&#34;&gt;POO&lt;/a&gt;, &lt;a href=&#34;http://www.diveintopython.net/functional_programming/index.html&#34;&gt;Programación Funcional&lt;/a&gt; y &lt;a href=&#34;http://www.diveintopython.net/dynamic_functions/index.html&#34;&gt;Funciones dinámicas&lt;/a&gt; pueden aportar algún conocimiento de interés y funcionalidades del lenguaje algo menos habituales de usar.&lt;/p&gt;&lt;p&gt;En la versión 3 pasa más o menos lo mismo, aunque los capítulos sobre &lt;a href=&#34;http://www.diveintopython3.net/generators.html&#34;&gt;Closures &amp;amp; Generatos&lt;/a&gt;, &lt;a href=&#34;http://www.diveintopython3.net/iterators.html&#34;&gt;Classes &amp;amp; Iteratos&lt;/a&gt;, &lt;a href=&#34;http://www.diveintopython3.net/advanced-iterators.html&#34;&gt;Advanced Iteratos&lt;/a&gt;, y &lt;a href=&#34;http://www.diveintopython3.net/special-method-names.html&#34;&gt;Special Method Names&lt;/a&gt; son interesantes. Esta versión tiene un poco menos de carga en la parte de Programación orientada a objetos, así que esos capítulos se pueden revisar en la versión para python 2. Los capítulos sobre migración de python 2 a python 3 sólo son de interés para quien tenga que abordar un proyecto de ese tipo.&lt;/p&gt;&lt;p&gt;Si estás buscando un libro para aprender python sepas o no programar previamente esta no es una buena opción. Pero si merece la pena cuando ya tengas idea del lenguaje y estés buscando aprender un poco más y conocer algunos &lt;em&gt;idioms&lt;/em&gt;, sobre todo en modo lectura rápida. Abre cada capítulo y trata de entender el ejemplo propuesto, si no tienes dudas puedes pasar al siguiente capítulo. Si el ejemplo tiene algo que te resulta de interés lee un poco más de ese capítulo.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2017/12/08/libro-dive-into-python/</link> <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2017/12/08/libro-dive-into-python/</guid> </item> <item> <title>Libro: Think Python: How to Think Like a Computer Scientist</title> <description>&lt;h1 id=&#34;libro-think-python-how-to-think-like-a-computer-scientist&#34;&gt;Libro: Think Python: How to Think Like a Computer Scientist&lt;/h1&gt;&lt;p&gt;How to Think Like a Computer Scientist es un libro clásico entre los recomendados para comenzar a programar en python. La primera edición es de 2002, escrito por Jeffrey Elkner, Allen B. Downey y Chris Meyers bajo licencia GNU FDL. El ser tan «antiguo» y el estar publicado bajo licencia libre ha hecho que a lo largo del tiempo hayan aparecido diversas versiones del libro.&lt;/p&gt;&lt;p&gt;Tenemos dos versiones del libro para python 2&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://www.openbookproject.net/thinkcs/python/english2e/&#34;&gt;How to Think Like a Computer Scientist: Learning with Python 2nd edition&lt;/a&gt;, sería la última edición para python 2 del libro original, y está fechada en 2012. Las soluciones a algunos ejercicios se pueden encontrar en &lt;a href=&#34;https://en.wikibooks.org/wiki/How_to_Think_Like_a_Computer_Scientist:_Learning_with_Python_2nd_Edition&#34;&gt;wikibooks&lt;/a&gt; (y seguramente valgan para otras versiones).&lt;/li&gt;&lt;li&gt;La &lt;a href=&#34;http://greenteapress.com/wp/learning-with-python/&#34;&gt;primera edición&lt;/a&gt; (2002) de ese mismo libro la podemos encontrar en &lt;a href=&#34;http://greenteapress.com/wp/&#34;&gt;Green Tea Press&lt;/a&gt; la página personal (y «editorial») de Allen B. Downey uno de los autores originales&lt;/li&gt;&lt;li&gt;Y también en Green Tea Press podemos encontrar una reedición distinta del mismo libro para python, renombrada simplemente a &lt;a href=&#34;http://greenteapress.com/wp/think-python/&#34;&gt;Think Python&lt;/a&gt;. Revisando el github donde se mantiene el libro los últimos cambios serios parecen ser de 2015&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;También tenemos varias versiones del libro enfocadas a python 3.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;La que podríamos considerar primera, de 2012, es &lt;a href=&#34;http://openbookproject.net/thinkcs/python/english3e/&#34;&gt;How to Think Like a Computer Scientist: Learning with Python 3&lt;/a&gt;, reeditada fundamentalmente por Peter Wentworth como libro de texto para un primer curso de programación.&lt;/li&gt;&lt;li&gt;Otra versión sería una adaptación de la de Peter Wentworth, hecha por varios profesores de la Universidad de Groningen, para emplearla también como &lt;a href=&#34;https://howtothink.readthedocs.io/en/latest/&#34;&gt;libro de texto para sus clases&lt;/a&gt;. En el prólogo declaran que su idea era cambiar la filosofía del libro, de «how to think like a computer scientist» to «how to think as a scientist with a computer», pero revisándolo en mi opinión, los cambios no son tan significativos como para conseguirlo. Está en readthedocs por lo que también se puede &lt;a href=&#34;https://readthedocs.org/projects/howtothink/&#34;&gt;descargar&lt;/a&gt;&lt;/li&gt;&lt;li&gt;En Green Tea Press también encontramos una versión (los últimos cambios serios en el github son de 2016). Esta sería algo así como la &lt;a href=&#34;http://greenteapress.com/wp/think-python-2e/&#34;&gt;segunda edición de Think Python&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Por último, un experimento interesante. &lt;a href=&#34;https://interactivepython.org/courselib/static/thinkcspy/index.html&#34;&gt;Un libro interactivo&lt;/a&gt;, que parece basado fundamentalmente la versión de Wentworth. Consiste en una aplicación web que permite ejecutar código en el propio navegador, depurar paso a paso a modo educativo y responder a cuestionarios&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;En la página de Green Tea Press hay un dos artículos explicando porqué publicar &lt;a href=&#34;http://greenteapress.com/free_books.html&#34;&gt;«free books»&lt;/a&gt;, y su &lt;a href=&#34;http://greenteapress.com/wp/textbook-manifesto/&#34;&gt;filosofía&lt;/a&gt; a la hora de escribir libros de texto. Además en el prólogo del libro se puede leer &lt;a href=&#34;http://greenteapress.com/thinkpython2/html/thinkpython2001.html#sec2&#34;&gt;algo sobre su historia&lt;/a&gt; para entender los autores y los cambios a lo largo del tiempo.&lt;/p&gt;&lt;p&gt;Todas las versiones (inluída la interactiva) están en repositorios de código en github o launchpad, por lo que es posible colaborar en su mejora. Y están escritos en reStructuredText o Markdown y convertidos a libros con sphinx u otras herramientas.&lt;/p&gt;&lt;p&gt;No resulta sencillo decir «cual es mejor», cada una de las veriones tiene sus puntos fuertes y débiles:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Los que hemos hemos numerado como dos y como tres son los que tienen para mi un orden de capítulos más lógico. Por ejemplo trata listas, tuplas y diccionarios en capítulos contiguos mientras que en las otras versiones los diccionarios están separados del resto de tipos de datos. Pero en dos han juntado varios capítulos en uno sólo por lo que su lectura se hace algo más difícil. Además los capítulos sobre numpy, matplotlib y data handling no encajan muy bien como están escritos en un libro para principiantes. Por tanto a pesar de ser el más actualizado yo en principio descartaría esta versión.El uno tiene algún material adicional respecto a los otros como capítulos sobre estructuras de datos más avanzadas (pilas, colas y árboles). Si bien creo que estos capítulos son de interés, tampoco pasa nada por prescindir de ellos en un primer contacto, porque hay otros libros más avanzados o más específicos que tratan mejor este tipo de temas.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;El número tres (&lt;a href=&#34;http://greenteapress.com/wp/think-python-2e/&#34;&gt;Think Python&lt;/a&gt;) tiene para mi otros alicientes como que algunos de los problemas y soluciones están resueltos &lt;a href=&#34;https://github.com/AllenDowney/ThinkPython2/tree/master/code&#34;&gt;en el github del autor&lt;/a&gt;. Es de los que siguen un orden más lógico, capítulos cortos, y una sección «debugging» al final de cada capítulo que explica «técnicas mentales» a la hora de depurar y construír un programa que resultan útiles. Además se puede comprar a través de Amazon, descargar gratuitamente en PDF, leer en html… Así que seguramente esta es la versión más recomendable.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;La versión interactiva también me ha sorprendido gratamente. El texto no es tan bueno como el de Think Python, pero el poder jugar con el código mientras leemos el texto, da muchas opciones a alguien que se introduce en el lenguaje y le permite aprender sin tener que liarse con el entorno. Además la opción de debug (&lt;em&gt;codelens&lt;/em&gt; en su terminología es especialmente útil para ver lo que pasa en el programa). Esta tambień es un opción recomendable.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Entre la opción interactiva y Think Python es difícil decidirse, si quieres avanzar rápido y tener una panorámica general, el libro seguramente es mejor, y la irrupción de cajas y botones en medio del texto menos molesta. Depende del estilo de aprendizaje de cada uno. Leer un par de capítulos de cada uno y decide tu mismo.&lt;/p&gt;&lt;p&gt;Si está revisión te ha ahorrado tiempo y quieres agradacerme el esfuerzo planteate donar usando el botón de la derecha, o simplemente dejar un comentario en esta entrada.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2017/11/15/libro-think-python-how-to-think-like-a-computer-scientist/</link> <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2017/11/15/libro-think-python-how-to-think-like-a-computer-scientist/</guid> </item> <item> <title>Hacen falta más programadores contando sus miserias</title> <description>&lt;h1 id=&#34;hacen-falta-mas-programadores-contando-sus-miserias&#34;&gt;Hacen falta más programadores contando sus miserias&lt;/h1&gt;&lt;p&gt;Desde que Andrés planteara hace ya dos años el reto de escribir sobre la &lt;a href=&#34;http://nosolosoftware.com/la-importancia-de-la-seleccion-tecnologica-en-una-pyme/&#34;&gt;selección tecnológica en pymes&lt;/a&gt; llevo queriendo escribir algo sobre ello.&lt;/p&gt;&lt;p&gt;Todavía no va a ir de esta, pero valga este mini-post para referenciar dos enlaces que han entrado en mi radar esta misma semana. En el primero &lt;a href=&#34;https://ma.tt/about/&#34;&gt;Matt Mullenweg&lt;/a&gt; quota a &lt;a href=&#34;https://en.wikipedia.org/wiki/Jonathan_Ive&#34;&gt;Jony Ive&lt;/a&gt; de Apple para afirmar que &lt;a href=&#34;https://ma.tt/2017/11/product-and-process/&#34;&gt;tan importante como el producto (o el servicio) que proporcionas a tus clientes es el proceso, o el aprendizaje&lt;/a&gt;, con el que has llevado hasta él. Algo en lo que creo firmemente y que también leí en Kent Beck (aunque ahora no encuentro el enlace). En el segundo nos hablan de como &lt;a href=&#34;https://www.alexhudson.com/2017/10/14/software-architecture-failing/&#34;&gt;no todas las arquitecturas valen para todos los casos&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Basicamente mi opinión va en la línea de que los creadores de opinión en torno al software, son lógicamente, increiblemente expertos en sus campos. Los frameworks con más éxito, son hechos por empresas como Google o Facebook. Las conferencias están llenas de gente que hace cosas muy chulas con las últimas tecnologías. Pero cuando tengas que decidir, si estás leyendo este post, seguramente no trabajes en Google, ni serás un mega-experto. Puede que tus clientes para hacer el deploy te hagan conectarte a un teamviewer ejecutándose en un Windows en una red interna donde te permiten abrir un putty al servidor y «monitorizan» todo lo que tecleas que debe hacerse a mano para validarlo. Trata de hablar con ellos de docker (o incluso de scripts para automatizar).&lt;/p&gt;&lt;p&gt;Hace falta más conferencia, más libros y más posts de gente contando sus miserias, y de como su trabajo es tan necesario como el de quien tiene la suerte de poder desplegar en AWS, porqué también están resolviendo problemas reales.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2017/11/12/hacen-falta-mas-programadores-contando-sus-miserias/</link> <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2017/11/12/hacen-falta-mas-programadores-contando-sus-miserias/</guid> </item> <item> <title>Libro: A Byte of Python de Swaroop C H</title> <description>&lt;h1 id=&#34;libro-a-byte-of-python-de-swaroop-c-h&#34;&gt;Libro: A Byte of Python de Swaroop C H&lt;/h1&gt;&lt;p&gt;El libro «&lt;a href=&#34;https://python.swaroopch.com/&#34;&gt;A Byte of Python&lt;/a&gt;» es uno de los que se suelen recomendar en las QA de como iniciarse en el desarrollo con Python. Es un libro corto, unas 120 hojas en la versión impresa que se puede ojear en apenas un par de horas. Está distribuído bajo licencia CC-by-sa 4.0 y el desarrollo se realiza en &lt;a href=&#34;https://github.com/swaroopch/byte-of-python&#34;&gt;github&lt;/a&gt;. Al ser libre hay distintas versiones en la red, la canónica está en &lt;a href=&#34;https://python.swaroopch.com/&#34;&gt;la página del autor&lt;/a&gt; y es la que se debería leer.&lt;/p&gt;&lt;p&gt;El libro hace un repaso básico a la sintaxis del lenguaje, sin entrar en demasiada profundidad en ningún tema y con ejemplos tipo «¡Hola mundo!». Tampoco se para demasiado en conceptos de teoría de la programación, como explicar que es una variable o un lenguaje interpretado pero si lo menciona. Eso sí, la terminología que emplea para hacer referencia a los conceptos es correcta.&lt;/p&gt;&lt;p&gt;Creo que es una buena guía si ya sabes algo de programación en otro lenguaje y quieres de una forma rápido poder empezar a hacer cosas con python, pero no es adecuado como primer contacto con el mundo del desarrollo.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2017/11/11/libro-a-byte-of-python-de-swaroop-c-h/</link> <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2017/11/11/libro-a-byte-of-python-de-swaroop-c-h/</guid> </item> <item> <title>Porqué creo que es útil discutir de Tabuladores y Espacios</title> <description>&lt;h1 id=&#34;porque-creo-que-es-util-discutir-de-tabuladores-y-espacios&#34;&gt;Porqué creo que es útil discutir de Tabuladores y Espacios&lt;/h1&gt;&lt;p&gt;Discutir de tabuladores y espacios es &lt;del&gt;importante&lt;/del&gt; útil.&lt;/p&gt;&lt;p&gt;Por mucho scrum y mucha &lt;a href=&#34;https://www.mountaingoatsoftware.com/agile/scrum/meetings/sprint-retrospective&#34;&gt;retro&lt;/a&gt;, generar el clima de confianza adecuado para cagarse en el facilitador o que los nóveles opinen si se debe usar una &lt;a href=&#34;http://alistair.cockburn.us/Hexagonal+architecture&#34;&gt;arquitectura hexagonal&lt;/a&gt; es difícil. Discutir sobre el color del &lt;a href=&#34;http://producingoss.com/en/common-pitfalls.html#bikeshed&#34;&gt;cobertizo para bicicletas&lt;/a&gt;, en algunos contextos será una perdida de tiempo y energía. En otros será una buena actividad, un ejercicio práctico antes de elevar el nivel de abstracción de las discusiones.&lt;/p&gt;&lt;p&gt;Y en todo caso, es algo que hay que decidir, así que mejor que sea por &lt;a href=&#34;https://lasindias.blog/4-ideas-sencillas-para-llevar-a-tu-comunidad-al-consenso&#34;&gt;consenso&lt;/a&gt;.&lt;/p&gt;</description><link>https://franciscopuga.es/blog/2017/08/15/porque-creo-que-es-util-discutir-de-tabuladores-y-espacios/</link> <pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate><source url="https://franciscopuga.es/rss.xml">Francisco Puga</source><guid isPermaLink="true">https://franciscopuga.es/blog/2017/08/15/porque-creo-que-es-util-discutir-de-tabuladores-y-espacios/</guid> </item> </channel></rss>